#user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    #gzip  on;
  server {
    listen 8888;

    auth_request /user/###REPLACE_WITH_THE_JUPYTERHUB_USER_ENVIRONMENT_VARIABLE###/validate;
    
    location = /user/###REPLACE_WITH_THE_JUPYTERHUB_USER_ENVIRONMENT_VARIABLE###/validate {
        proxy_pass http://127.0.0.1:9095/validate;
        proxy_pass_request_body off; # no need to send the POST body
        proxy_set_header Content-Length "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
        # Our ingress configuration requires this proxy_redirect 
        proxy_redirect https,http https;
    }

    auth_request_set $auth_resp_state $upstream_http_x_auth_state;
    auth_request_set $auth_resp_login_url $upstream_http_x_auth_login_url;

    location = /user/###REPLACE_WITH_THE_JUPYTERHUB_USER_ENVIRONMENT_VARIABLE###/oauth_callback {
        proxy_pass http://127.0.0.1:9095/oauth_callback;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_redirect https,http https;

    }

    location /user/###REPLACE_WITH_THE_JUPYTERHUB_USER_ENVIRONMENT_VARIABLE### {
        rewrite /user/###REPLACE_WITH_THE_JUPYTERHUB_USER_ENVIRONMENT_VARIABLE###/(.*) /$1 break;
        proxy_pass http://localhost:8080;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    error_page 401 = @error401;
    location @error401 {
        add_header Set-Cookie ###REPLACE_WITH_THE_JUPYTERHUB_CLIENT_ID_ENVIRONMENT_VARIABLE###-oauth-state="$auth_resp_state";
        return 302 https://$host$auth_resp_login_url;
    }
  }
}

